#!/usr/bin/perl

use strict;
use warnings;

use feature qw(say);
use FindBin qw($Bin);
use Data::Dumper;

use lib "$Bin/../lib";
use Utils qw(getPentagonalNumberN min);

=pod
Pentagonal numbers are generated by the formula, P_n=n(3n-1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P_4 + P_7 = 22 + 70 = 92 = P_8. However, their difference, 70 - 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, P_j and P_k, for which their sum and difference are pentagonal and D = |P_k - P_j| is minimised; what is the value of D?
=cut

my $solution;

# some simplifications
## k > j (0)

## P_j = j(3j-1)/2 (1)
## P_k = k(3k-1)/2 (2)

## P_k + P_j = l(3l-1)/2 (3)
## P_k - P_j = m(3m-1)/2 (4)

## k, j, l, m are all integers
## P_j, P_k, sum, difference are all integers

## from (2) - (1)

## k(3k-1)/2 - j(3j-1)/2 = m(3m-1)/2
## k(3k-1) - j(3j-1) = m(3m - 1)
## 3(k^2 - j^2) - k + j = 3(m^2) - m

# nevermind... brute force
my %pentagonalDictionary = (1 => 1);
my %possiblePentagonalSumToDiff = ();
my $k = 2;
do {
    my $p_k = $k*(3*$k-1)/2;
    $pentagonalDictionary{$p_k} = $k;

    if($possiblePentagonalSumToDiff{$p_k}) {
        $solution = $possiblePentagonalSumToDiff{$p_k};
    }

    for(my $j = $k-1; $j >= 1; $j--) {
        my $p_j = $j*(3*$j-1)/2;
        my $D = $p_k - $p_j;
        my $S = $p_k + $p_j;
        if($pentagonalDictionary{$D}) {
            my $existingDiff = $possiblePentagonalSumToDiff{$S} ||
                $D;
            $possiblePentagonalSumToDiff{$S} = min($existingDiff, $D);
        }
    }
    $k++;
} while (!$solution);

say "Solution = $solution" if $solution;

