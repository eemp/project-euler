#!/usr/bin/perl

use strict;
use warnings;

use feature qw(say);
use FindBin qw($Bin);
use Data::Dumper;

use lib "$Bin/../lib";
use Primes qw(get_prime_factors); 

=pod
Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <= b <= 5:

2^2=4, 2^3=8, 2^4=16, 2^5=32
3^2=9, 3^3=27, 3^4=81, 3^5=243
4^2=16, 4^3=64, 4^4=256, 4^5=1024
5^2=25, 5^3=125, 5^4=625, 5^5=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by a^b for 2 <= a <= 100 and 2 <= b <= 100?
=cut

my $solution;

my $ACAP = 100;
my $BCAP = 100;
my %known_terms = ();

for(my $a = 2; $a <= $ACAP; $a++)
{
    for(my $b = 2; $b <= $BCAP; $b++)
    {
        my $factors = get_factors_of_powers($a, $b);
        my $factors_str = join(',', @$factors);
        # say "$a^$b => $factors_str";
        $known_terms{$factors_str} = 1;
    }
}

$solution = scalar(keys %known_terms);

say "Solution = $solution" if $solution; # 9183

sub get_factors_of_powers
{
    my ($base, $exp) = @_;
    my @factors = ();
    my $base_factors = get_prime_factors($base);
    foreach my $f (@$base_factors)
    {
        for(my $k = 0; $k < $exp; $k++)
        {
            push(@factors, $f);
        }
    }
    return \@factors;
}

